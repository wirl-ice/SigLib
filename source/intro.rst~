SigLib (siglib) stands for Signature Library and is a suite of tools to
query, manipulate and process remote sensing imagery (primarily SAR
remote sensing). It uses open source libraries and can be run on PC or
Linux.

Overview
^^^^^^^^

There are 4 main modes that it can run in (or combinations of these)

#. A **Data Discovery Mode** where remote sensing scenes are discovered
   by ingesting a copy of the CIS archive (or other geodatabase
   containing imagery, with tweaks), by crawling through a hard drive
   and extracting metadata from zipped SAR scenes, or by querying a
   local database. Queries take a shapefile with a specific format as
   input.
#. An **Exploratory Mode** where remote sensing scenes are being made
   ready for viewing. This includes opening zip files, converting SLC
   imagery, geographical projection, cropping, masking, image
   stretching, renaming, and pyramid generation.
#. A **Scientific Mode** where remote sensing scenes can be converted to
   calibrated (sigma0), noise level, incidence angle values and image
   data (from each band) can be subsampled by using a vector. Data can
   be stored in a database for further processing.
#. An **Analysis Mode** where data that was stored in the database is
   retrieved and plotted [Note, this is essentially depreciated since it
   hasn't been used for over 5 years]

Dependencies
^^^^^^^^^^^^

You will need a computer running linux or windoze (mac?... maybe, don't
know)

-  Python 2 (not 3), along with several scientific libraries - numpy,
   pandas, psycopg2, matplotlib, datetime...
-  gdal/ogr libraries
-  PostrgreSQL/PostGIS could be on another computer)

Nice to haves/future...

-  It is highly recommended that you have access to QGIS or ArcGIS to
   manipulate shapefiles
-  Also, if you want to work with ASF CEOS Files, you will need ASF
   MapReady (some functionality)
-  Eventually, there will be a push to integrate other remote sensing
   tools - SNAP(replaces NEST,PolSARPro), CP Simulator, MADGIC, etc.

Modules
^^^^^^^

There are several modules that are organized according to core
functionality.

#. **Util.py** - a bunch of utilities for manipulating files,
   shapefiles, etc
#. **Metadata.py** - used to discover and extract metadata from image
   files
#. **Database.py** - used to interface between the PostGIS database for
   storage and retrieval of information
#. **Image.py** - used to manipulate images, project, calibrate, crop,
   etc.

**SigLib.py** is the front-end of the software. It calls the modules
listed above and is in turn controlled by a configuration file. To run,
simply edit the \*.cfg file with the paths and inputs you want and then
run siglib.py.

However, you can also code your own script to access the functionality
of the modules if you wish.

Acknowledgements
^^^^^^^^^^^^^^^^

This software was conceived and advanced initially by Derek Mueller
(while he was a Visiting Fellow at the Canadian Ice Service). Some code
was derived from from Defence Research and Development Canada (DRDC). I
benefited from discussions with Ron Saper, Angela Cheng and My salary
was provided via a CSA GRIP project (PI Roger De Abreu).

At Carleton this code was modified further and others have worked to
improve it since the early days at CIS: Cindy Lopes (workstudy student &
computer programmer) 2012 and Sougal Bouh-Ali (workstudy student &
computer programmer) 2013-2016. Ron Saper, Anna Crawford and Greg
Lewis-Paley helped out as well (indirectly).
